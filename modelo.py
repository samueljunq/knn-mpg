# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14Jwhy-pCmVbONOue7d4lmV9CRjT-wBsO
"""
import pickle
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neighbors import KNeighborsRegressor
from sklearn.metrics import mean_absolute_error, mean_squared_error

# Carregar os dados
df = pd.read_csv("Automobile.csv")

# Remover colunas não numéricas irrelevantes
df = df.drop(columns=["name", "origin"], errors='ignore')

# Tratar valores ausentes
df = df.dropna()

# Definir variáveis independentes (X) e dependente (y)
X = df.drop(columns=["mpg"])
y = df["mpg"]

# Dividir os dados em treino e teste
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Normalizar os dados
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Definir o modelo KNN
knn = KNeighborsRegressor(n_neighbors=5)
knn.fit(X_train, y_train)

# Fazer previsões
y_pred = knn.predict(X_test)

# Avaliação do modelo
mae = mean_absolute_error(y_test, y_pred)
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)

print(f"MAE: {mae:.2f}")
print(f"MSE: {mse:.2f}")
print(f"RMSE: {rmse:.2f}")

with open("scaler.pkl", "wb") as scaler_file:
    pickle.dump(scaler, scaler_file)

with open("model.pkl", "wb") as model_file:
    pickle.dump(knn, model_file)
with open("knn_model.pkl", "wb") as model_file:
    pickle.dump(knn, model_file)
